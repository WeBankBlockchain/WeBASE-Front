version '1.0'

apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

// In this section you declare where to find the dependencies of your project
repositories {
    maven {
        url "http://maven.aliyun.com/nexus/content/groups/public/"
    }
    mavenLocal()
    mavenCentral()
}

def spring_version="4.3.16.RELEASE"
List spring =[ 
    "org.springframework:spring-core:$spring_version", 
    "org.springframework:spring-beans:$spring_version", 
    "org.springframework:spring-context:$spring_version", 
    "org.springframework:spring-tx:$spring_version", 
    "org.springframework:spring-web:$spring_version", 
    "org.springframework:spring-webmvc:$spring_version", 
    "org.springframework:spring-jdbc:$spring_version"
]

def spring_boot_version="1.5.9.RELEASE"
List spring_boot =[ 
    "org.springframework.boot:spring-boot-starter-web:$spring_boot_version",
    "org.springframework.boot:spring-boot-autoconfigure:$spring_boot_version",
    "org.springframework.boot:spring-boot-configuration-processor:$spring_boot_version",
    "org.springframework.boot:spring-boot-starter-data-jpa:$spring_boot_version",
    "org.springframework.boot:spring-boot-starter-log4j2:$spring_boot_version"
]

List netty = [
    'io.netty:netty-all:4.1.15.Final',
    'io.netty:netty-tcnative:2.0.0.Final'
]

def log4j_version="2.9.0"
List logger = [
    "org.apache.logging.log4j:log4j-api:$log4j_version",
    "org.apache.logging.log4j:log4j-core:$log4j_version",
    "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version",
    "org.apache.logging.log4j:log4j-web:$log4j_version"
]

List swagger = [
    'io.springfox:springfox-swagger2:2.8.0',
    'io.springfox:springfox-swagger-ui:2.8.0'
]

List web3sdk = [
    'org.fisco-bcos:web3sdk:1.2.5',
    'org.apache.httpcomponents:httpclient:4.5.2',
    'org.bouncycastle:bcprov-jdk15on:1.54',
    'com.lambdaworks:scrypt:1.4.0',
    'com.squareup:javapoet:1.7.0',
    'io.reactivex:rxjava:1.2.4',
    'com.github.jnr:jnr-unixsocket:0.15'
]

dependencies {
    compile spring,spring_boot,netty,logger,swagger,web3sdk

    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.11'
    compile 'org.apache.commons:commons-lang3:3.6'
    compile 'com.alibaba:fastjson:1.2.29'
    compile 'com.h2database:h2:1.4.197'
    compile 'org.fusesource:sigar:1.6.4'
    compile 'org.projectlombok:lombok:1.18.2'
    //annotationProcessor 'org.projectlombok:lombok:1.18.2'

    testCompile 'junit:junit:4.12',
        'org.springframework.boot:spring-boot-starter-test:1.5.9.RELEASE',
        'com.github.macdao:moscow:0.1.0',
        'com.squareup.okhttp3:okhttp:3.1.2'
}

configurations {
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    all*.exclude group: 'log4j', module: 'log4j'
    all*.exclude group: 'com.github.jnr', module: 'jnr-posix'
    all*.exclude group: 'com.mchange', module: '*'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    resources  {
        srcDir 'src/main/resources'
        }
    }
}

clean {
    delete 'dist'
    delete 'build'
}

jar {
    destinationDir file('dist/apps')
    archiveName project.name + '.jar'
    exclude '**/*.xml'
    exclude '**/*.properties'

    doLast {
        copy {
            from file('src/main/resources/')
            into 'dist/conf'
        }
        copy {
            from file('report/')
            into 'dist/report'
        }
        copy {
            from file('tool/')
            into 'dist/tool'
        }
        copy {
            from configurations.runtime
            into 'dist/lib'
        }
        copy {
            from file('.').listFiles().findAll{File f -> (f.name.endsWith('.sh') || f.name.endsWith('.env'))}
            into 'dist'
        }
    }
}
